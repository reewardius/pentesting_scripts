#!/usr/bin/env ruby
require 'optparse'
def help
	puts
	puts " - Name Formatter v1.0"
	puts " - Author: Alton Johnson (@altonjx)"
	puts " - Contact: alton.jx@gmail.com"
	puts 
	puts " Required"
	puts
	puts " \t--target\tSpecify file containing names or first/last name in quotes."
	puts
	puts " Additional Options (sample name: Alton Johnson):"
	puts
	puts "\t--option1\tFormat names using Alton.Johnson@domain.com"
	puts "\t--option2\tFormat names using AJohnson@domain.com."
	puts "\t--option3\tFormat names using AltonJ@domain.com."
	puts "\t--option4\tAll of the above."
	puts "\t--domain\tDomain for email format, e.g. test@domain.com (optional)"
	puts
	puts " Examples:"
	puts
	puts " #{ARGV.first} --target \"Alton Johnson\" --option1 --option2"
	puts " #{ARGV.first} --target names.txt --option4"
	puts
	exit
end
if $0 == __FILE__
	if ARGV.length == 0
		help
	end
	options = {:format_types => [], :target => nil, :domain => nil}
	avail_options = [1,2,3,4]
	OptionParser.new do |parser|
		avail_options.each do |ao|
			parser.on("--option#{ao}") {|d| options[:format_types] << ao}
		end
		parser.on("--target=TARGET") do |target|
			options[:target] = target
		end
		parser.on("--domain=DOMAIN") do |domain|
			options[:domain] = domain
		end
	end.parse!
	fail "No target specified. Please provide a target with option --target." if options[:target].nil?
	if File.exists? options[:target]
		target_names = File.open(options[:target]).read.split("\n")
	else
		target_names = [options[:target]]
	end
	domain = options[:domain] ||= ""
	target_names.each do |target_name|
		fname = target_name.split(" ")[0]
		lname = target_name.split(" ")[-1]
		options[:format_types].each do |option|
			case option
			when 1
				puts "#{fname}.#{lname}#{domain}"
			when 2
				puts "#{fname[0]}#{lname}#{domain}"
			when 3
				puts "#{fname}#{lname[0]}#{domain}"
			when 4
				puts "#{fname}.#{lname}#{domain}"
				puts "#{fname[0]}#{lname}#{domain}"
				puts "#{fname}#{lname[0]}#{domain}"
			end
		end
	end
end